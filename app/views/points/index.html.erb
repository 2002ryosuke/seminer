<h1>Points</h1>
<h2><%= @points.class %></h2>

<div id = 'cy'></div>

<script type="module">
	import { initializeGraph } from "graph/cytoscape";
	import { createPoint } from "graph/cytoscape";
	import { createLine } from "graph/cytoscape";
	import { deletePoint } from "graph/cytoscape";
	import { addNode } from "graph/cytoscape";
	import { addLine } from "graph/cytoscape";

	document.addEventListener("DOMContentLoaded", function () {
    const initialData = {
      points: <%= raw @points.to_json %>,
      lines: <%= raw @lines.to_json %>
    };
	
	const cy = initializeGraph(initialData);

let count_point = <%= @points.size %>
let count_line = <%= @lines.size %>
var nodes = [];


cy.on('click', function( evt ){
	var tgt = evt.target;
	const x = evt.position.x
	const y = evt.position.y

	if (tgt === cy ) {
		nodes = [];
		count_point++;

		createPoint(x, y);
		addNode(cy, `Z${count_point}`, x, y);
	} else {
		cy.nodes().once('click', function( e ){
			var ele = e.target;
			nodes.push(ele.id());
			if ( nodes.length == 2 ) {
				count_line++;
				let nodes_num = [];
				//nodesの中のZをはずして、数字だけにする
				for (let i = 0; i < nodes.length; i++) {
					const node = nodes[i];
					const node_num_arry = node.match(/\d+/); 
					let [node_num] = node_num_arry;
					nodes_num.push(node_num);
				}
				console.log(nodes_num);

				createLine(nodes_num[0], nodes_num[1]);
				addLine(cy, count_line, nodes[0], nodes[1]);
				modes=[];
				nodes_num = [];
			}
		});
	};
});

cy.on('cxttap', 'nodes', function( evt ){
	var tgt = evt.target;
	console.log(tgt);
	console.log(tgt.id());
	let tgt_id = tgt.id().match(/\d+/);
	console.log(tgt_id);

	if (tgt_id == null){
		console.log('null');
		} else {
		let [point_delete] = tgt_id;
		console.log(point_delete);

		deletePoint(point_delete);
		tgt.remove(evt);
		}
});
	});
</script>
